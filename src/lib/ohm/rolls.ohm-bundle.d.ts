// AUTOGENERATED FILE
// This file was generated from rolls.ohm by `ohm generateBundles`.

import {
  BaseActionDict,
  Grammar,
  IterationNode,
  Node,
  NonterminalNode,
  Semantics,
  TerminalNode
} from 'ohm-js';

export interface RollsActionDict<T> extends BaseActionDict<T> {
  Rolls?: (this: NonterminalNode, arg0: IterationNode, arg1: IterationNode, arg2: IterationNode) => T;
  Roll?: (this: NonterminalNode, arg0: NonterminalNode) => T;
  MinMaxRoll?: (this: NonterminalNode, arg0: NonterminalNode, arg1: TerminalNode, arg2: NonterminalNode, arg3: TerminalNode) => T;
  ArithmeticRoll?: (this: NonterminalNode, arg0: NonterminalNode, arg1: NonterminalNode, arg2: NonterminalNode) => T;
  SignedRoll?: (this: NonterminalNode, arg0: NonterminalNode, arg1: NonterminalNode) => T;
  LiteralRoll?: (this: NonterminalNode, arg0: NonterminalNode) => T;
  integer?: (this: NonterminalNode, arg0: IterationNode) => T;
  operator?: (this: NonterminalNode, arg0: TerminalNode) => T;
  diceRoll?: (this: NonterminalNode, arg0: IterationNode, arg1: NonterminalNode, arg2: NonterminalNode) => T;
  advantageRoll?: (this: NonterminalNode, arg0: NonterminalNode, arg1: NonterminalNode) => T;
}

export interface RollsSemantics extends Semantics {
  addOperation<T>(name: string, actionDict: RollsActionDict<T>): this;
  extendOperation<T>(name: string, actionDict: RollsActionDict<T>): this;
  addAttribute<T>(name: string, actionDict: RollsActionDict<T>): this;
  extendAttribute<T>(name: string, actionDict: RollsActionDict<T>): this;
}

export interface RollsGrammar extends Grammar {
  createSemantics(): RollsSemantics;
  extendSemantics(superSemantics: RollsSemantics): RollsSemantics;
}

declare const grammar: RollsGrammar;
export default grammar;

